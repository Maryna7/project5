@charset "UTF-8";

html {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

*,
*:before,
*:after {
  -webkit-box-sizing: inherit;
  box-sizing: inherit;
}

* {
  max-height: 1000000px;
}

body {
  color: #5c5c5c;
  background: #fff;
  font: 14px/1.6 "Arial", "Helvetica Neue", "Helvetica", sans-serif;
  min-width: 320px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  margin: 0;
}

img {
  max-width: 100%;
  height: auto;
}

.gm-style img {
  max-width: none;
}

.navbar .nav-list,
.social-list,
.carousel,
.posts-list-holder .post-list,
.nav-list-footer {
  margin: 0;
  padding: 0;
  list-style: none;
}

.clearfix:after,
.main-content .container:after,
.main-article-holder .info-box:after,
.main-article-holder .meta:after,
.sidebar:after,
.footer-holder:after {
  content: '';
  display: block;
  clear: both;
}

.ellipsis {
  white-space: nowrap;
  /* 1 */
  -o-text-overflow: ellipsis;
  text-overflow: ellipsis;
  /* 2 */
  overflow: hidden;
}

h1,
.h1,
h2,
.h2,
h3,
.h3,
h4,
.h4,
h5,
.h5,
h6,
.h6,
.h {
  font-family: "League Gothic", "Arial", "Helvetica Neue", "Helvetica", sans-serif;
  font-weight: bold;
  margin: 0 0 0.5em;
  color: #076e9f;
}

h1 a:hover,
.h1 a:hover,
h2 a:hover,
.h2 a:hover,
h3 a:hover,
.h3 a:hover,
h4 a:hover,
.h4 a:hover,
h5 a:hover,
.h5 a:hover,
h6 a:hover,
.h6 a:hover,
.h a:hover {
  opacity: .6;
}

h1,
.h1 {
  font-size: 60px;
}

h2,
.h2 {
  font-size: 32px;
}

h3,
.h3 {
  font-size: 22px;
}

h4,
.h4 {
  font-size: 20px;
}

h5,
.h5 {
  font-size: 18px;
}

h6,
.h6 {
  font-size: 16px;
}

p {
  margin: 0 0 1em;
}

a {
  color: #076e9f;
  -webkit-transition: all, .4s;
  -o-transition: all, .4s;
  transition: all, .4s;
  text-decoration: none;
}

a:hover,
a:focus {
  text-decoration: none;
}

form,
fieldset {
  margin: 0;
  padding: 0;
  border-style: none;
}

input[type='text'],
input[type='tel'],
input[type='email'],
input[type='search'],
input[type='password'],
textarea {
  -webkit-appearance: none;
  -webkit-border-radius: 0;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  border: 1px solid #5c5c5c;
  padding: 0.4em 0.7em;
  font-family: "Arial", "Helvetica Neue", "Helvetica", sans-serif;
}

input[type='text']:focus,
input[type='tel']:focus,
input[type='email']:focus,
input[type='search']:focus,
input[type='password']:focus,
textarea:focus {
  border-color: #333;
}

input[type='text']::-webkit-input-placeholder,
input[type='tel']::-webkit-input-placeholder,
input[type='email']::-webkit-input-placeholder,
input[type='search']::-webkit-input-placeholder,
input[type='password']::-webkit-input-placeholder,
textarea::-webkit-input-placeholder {
  color: #5c5c5c;
}

input[type='text']::-moz-placeholder,
input[type='tel']::-moz-placeholder,
input[type='email']::-moz-placeholder,
input[type='search']::-moz-placeholder,
input[type='password']::-moz-placeholder,
textarea::-moz-placeholder {
  opacity: 1;
  color: #5c5c5c;
}

input[type='text']:-moz-placeholder,
input[type='tel']:-moz-placeholder,
input[type='email']:-moz-placeholder,
input[type='search']:-moz-placeholder,
input[type='password']:-moz-placeholder,
textarea:-moz-placeholder {
  color: #5c5c5c;
}

input[type='text']:-ms-input-placeholder,
input[type='tel']:-ms-input-placeholder,
input[type='email']:-ms-input-placeholder,
input[type='search']:-ms-input-placeholder,
input[type='password']:-ms-input-placeholder,
textarea:-ms-input-placeholder {
  color: #5c5c5c;
}

input[type='text'].placeholder,
input[type='tel'].placeholder,
input[type='email'].placeholder,
input[type='search'].placeholder,
input[type='password'].placeholder,
textarea.placeholder {
  color: #5c5c5c;
}

select {
  -webkit-border-radius: 0;
}

textarea {
  resize: vertical;
  vertical-align: top;
}

button,
input[type='button'],
input[type='reset'],
input[type='file'],
input[type='submit'] {
  -webkit-appearance: none;
  -webkit-border-radius: 0;
  cursor: pointer;
}

@font-face {
  font-family: 'League Gothic';
  src: url("../fonts/leaguegothic-regular-webfont.eot");
  src: url("../fonts/leaguegothic-regular-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/leaguegothic-regular-webfont.woff") format("woff"), url("../fonts/leaguegothic-regular-webfont.ttf") format("truetype"), url("../fonts/leaguegothic-regular-webfont.svg#league_gothicregular") format("svg");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'icomoon';
  src: url("../fonts/icomoon.eot?ipws7v");
  src: url("../fonts/icomoon.eot?ipws7v#iefix") format("embedded-opentype"), url("../fonts/icomoon.ttf?ipws7v") format("truetype"), url("../fonts/icomoon.woff?ipws7v") format("woff"), url("../fonts/icomoon.svg?ipws7v#icomoon") format("svg");
  font-weight: normal;
  font-style: normal;
}

[class^="icon-"],
[class*=" icon-"] {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'icomoon' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.icon-location-pin:before {
  content: "\e900";
}

.icon-social:before {
  content: "\e901";
}

.icon-interface:before {
  content: "\e902";
}

.icon-square:before {
  content: "\e903";
}

.icon-facebook-logo:before {
  content: "\e904";
}

.icon-linkedin:before {
  content: "\e905";
}

.icon-big-elephant:before {
  content: "\e906";
}

.icon-twitter:before {
  content: "\e907";
}

.icon-pinterest-logotype:before {
  content: "\e908";
}

#header {
  padding: 20px 0;
  text-align: center;
}

.logo-holder {
  margin-bottom: 20px;
  padding: 0 190px;
}

.logo-holder .logo {
  display: inline-block;
  vertical-align: top;
}

.logo-holder .logo:hover {
  opacity: .7;
}

.logo-holder img {
  border: none;
  vertical-align: top;
}

/**start burger menu styles**/

.nav-active .nav-opener:before {
  -webkit-transform: rotate(45deg) translateY(11px);
  -ms-transform: rotate(45deg) translateY(11px);
  transform: rotate(45deg) translateY(11px);
}

.nav-active .nav-opener span {
  display: none;
}

.nav-active .nav-opener:after {
  -webkit-transform: rotate(-45deg) translateY(-11px);
  -ms-transform: rotate(-45deg) translateY(-11px);
  transform: rotate(-45deg) translateY(-11px);
}

.nav-opener {
  display: none;
  float: right;
  vertical-align: top;
  position: relative;
  width: 25px;
  height: 19px;
}

.nav-opener:before,
.nav-opener:after,
.nav-opener span {
  content: '';
  position: absolute;
  height: 3px;
  width: 100%;
  top: 0;
  left: 0;
  background: #076e9f;
  -webkit-transition: -webkit-transform .4s;
  transition: -webkit-transform .4s;
  -o-transition: transform .4s;
  transition: transform .4s;
  transition: transform .4s, -webkit-transform .4s;
}

.nav-opener:after {
  top: auto;
  bottom: 0;
}

.nav-opener span {
  top: 8px;
}

/**end burger menu styles**/

.links-holder {
  font-size: 12px;
}

.navbar {
  text-transform: uppercase;
}

.navbar li {
  display: inline-block;
  vertical-align: middle;
}

.navbar .active a {
  color: #fff;
  background: #076e9f;
  cursor: default;
}

.navbar .active a:hover {
  opacity: .8;
}

.navbar a {
  display: inline-block;
  vertical-align: middle;
  color: #707070;
  padding: 3px 13px;
  border-radius: 2px;
  border: 1px solid transparent;
}

.navbar a:hover {
  border: 1px solid #076e9f;
}

.social-list {
  position: absolute;
  right: 15px;
  top: 20px;
  font-size: 16px;
  line-height: 1;
}

.social-list li {
  display: inline-block;
  vertical-align: middle;
  padding: 0 5px;
}

.social-list li:last-child {
  padding: 0 0 0 5px;
}

.social-list a {
  color: #d4d4d4;
}

.social-list a:hover {
  opacity: .6;
}

#wrapper {
  position: relative;
  width: 100%;
  overflow: hidden;
  margin: 0 auto;
  text-align: left;
}

.container {
  width: 100%;
  max-width: 980px;
  margin: 0 auto;
  padding: 0 10px;
}

/**start visual section**/

.visual-section {
  background-size: cover;
  background-repeat: no-repeat;
  background-position: 50% 50%;
  border-top: 2px solid #22aaec;
  border-bottom: 2px solid #22aaec;
  white-space: nowrap;
  position: relative;
  text-align: center;
  padding-bottom: 120px;
}

.visual-section:after {
  content: "";
  display: inline-block;
  vertical-align: middle;
  font-size: 0;
  line-height: 0;
  height: 318px;
}

.visual-section .container {
  display: inline-block;
  vertical-align: middle;
  white-space: normal;
}

.visual-title {
  color: #076e9f;
  text-align: center;
  text-transform: uppercase;
}

.visual-title h1 {
  display: inline-block;
  vertical-align: top;
  background: rgba(255, 255, 255, 0.8);
  padding: 0 25px;
  margin-bottom: 20px;
}

.visual-title p {
  display: inline-block;
  vertical-align: top;
  font-family: "League Gothic", "Arial", "Helvetica Neue", "Helvetica", sans-serif;
  font-size: 30px;
  background: rgba(255, 255, 255, 0.8);
  padding: 15px;
  line-height: 1;
  margin-bottom: 0;
}

.visual-title .mark {
  color: #22aaec;
}

.carousel-holder {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  width: 100%;
  max-width: 990px;
  margin: 0 auto;
  padding: 0 15px;
  background: rgba(51, 51, 51, 0.5);
  white-space: normal;
  text-align: left;
}

.carousel-holder:before,
.carousel-holder:after {
  content: "";
  position: absolute;
  top: 0;
  left: 100%;
  bottom: 0;
  width: 100%;
  background: rgba(51, 51, 51, 0.5);
}

.carousel-holder:after {
  left: auto;
  right: 100%;
}

.carousel-holder .slick-slider {
  margin-bottom: 10px;
}

.carousel-holder .slick-list {
  max-width: calc(100% - 30px);
  margin: 0 auto;
}

.carousel-holder .slick-track:focus,
.carousel-holder .slick-slide:focus {
  outline: none;
}

.carousel-holder .slick-prev,
.carousel-holder .slick-next {
  -webkit-transform: rotate(45deg) translateY(-50%);
  -ms-transform: rotate(45deg) translateY(-50%);
  transform: rotate(45deg) translateY(-50%);
  z-index: 2;
  -webkit-transition: opacity .4s;
  -o-transition: opacity .4s;
  transition: opacity .4s;
}

.carousel-holder .slick-prev:before,
.carousel-holder .slick-next:before {
  display: none;
}

.carousel-holder .slick-prev:hover,
.carousel-holder .slick-next:hover {
  opacity: .6;
}

.carousel-holder .slick-prev {
  border-bottom: 3px solid rgba(255, 255, 255, 0.6);
  border-left: 3px solid rgba(255, 255, 255, 0.6);
  left: -20px;
}

.carousel-holder .slick-next {
  border-top: 3px solid rgba(255, 255, 255, 0.6);
  border-right: 3px solid rgba(255, 255, 255, 0.6);
  right: -6px;
}

.carousel {
  padding: 20px 0;
  margin: 0 -15px;
  font-size: 11px;
  line-height: 1.2;
}

.carousel li {
  position: relative;
  margin: 0 15px;
}

.carousel .img-box {
  position: relative;
  max-width: 70px;
}

.carousel .img-box:after {
  content: "";
  position: absolute;
  z-index: -1;
  top: 0;
  left: 35px;
  bottom: 0;
  width: 100%;
  background: #fff;
}

.carousel .img-box img {
  vertical-align: top;
  border-radius: 50%;
  width: 100%;
}

.carousel .txt-box {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 70px;
  right: 0;
  overflow-x: hidden;
  overflow-y: auto;
  padding: 7px 3px 4px;
  background: #fff;
}

.carousel p {
  font-style: italic;
  color: #515151;
  margin-bottom: 0;
}

.carousel span {
  color: #828282;
}

/**end visual section**/

/**start main content**/

.main-content .container {
  position: relative;
  border-bottom: 1px dotted #d5d5d5;
}

.main-content .container:before {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  left: 199px;
  width: 1px;
  background: #d5d5d5;
  background: -webkit-gradient(linear, left top, left bottom, from(#d5d5d5), color-stop(50%, rgba(213, 213, 213, 0.5)), to(rgba(244, 243, 243, 0)));
  background: -webkit-linear-gradient(top, #d5d5d5 0%, rgba(213, 213, 213, 0.5) 50%, rgba(244, 243, 243, 0) 100%);
  background: -o-linear-gradient(top, #d5d5d5 0%, rgba(213, 213, 213, 0.5) 50%, rgba(244, 243, 243, 0) 100%);
  background: linear-gradient(to bottom, #d5d5d5 0%, rgba(213, 213, 213, 0.5) 50%, rgba(244, 243, 243, 0) 100%);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#d5d5d5', endColorstr='#00f4f3f3',GradientType=0 );
  background-size: 1px 2px;
  background-repeat: repeat-y;
}

.main-content-holder {
  float: right;
  width: 100%;
  max-width: calc(100% - 195px);
  position: relative;
  border-top: 2px solid #22aaec;
  margin-top: -10px;
  background: #fff;
  z-index: 1;
  padding-bottom: 10px;
}

.main-article-holder {
  position: relative;
  padding: 25px 15px 20px;
  border: dotted #d5d5d5;
  border-width: 0 1px 1px 0;
}

.main-article-holder .article {
  font-size: 0;
  line-height: 0;
}

.main-article-holder .info-box,
.main-article-holder .txt-box {
  display: inline-block;
  vertical-align: top;
  font-size: 14px;
  line-height: 1.6;
}

.main-article-holder .info-box {
  width: 110px;
  line-height: 1.3;
  text-align: center;
  color: #fff;
}

.main-article-holder .info-box a {
  color: #fff;
}

.main-article-holder .info-box a:hover {
  opacity: .7;
}

.main-article-holder .txt-box {
  padding-left: 30px;
  width: calc(100% - 110px);
}

.main-article-holder .date,
.main-article-holder .author {
  position: relative;
  float: left;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  font-weight: bold;
  font-size: 10px;
}

.main-article-holder .date time,
.main-article-holder .date > span,
.main-article-holder .author time,
.main-article-holder .author > span {
  position: absolute;
  top: 50%;
  left: 0;
  width: 100%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

.main-article-holder .date {
  margin: 0 5px 5px 0;
  background: #22aaec;
}

.main-article-holder .author {
  background-size: cover;
  background-repeat: no-repeat;
  background-position: 50% 50%;
}

.main-article-holder .meta {
  font-size: 12px;
}

.main-article-holder .btn {
  float: left;
  position: relative;
  color: #fff;
  background: #076e9f;
  background: -webkit-gradient(linear, left top, left bottom, from(#0883b1), to(#06588c));
  background: -webkit-linear-gradient(top, #0883b1 0%, #06588c 100%);
  background: -o-linear-gradient(top, #0883b1 0%, #06588c 100%);
  background: linear-gradient(to bottom, #0883b1 0%, #06588c 100%);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#46a3c5', endColorstr='#06588c',GradientType=0 );
  padding: 2px 5px;
  border: 1px solid #045279;
  border-bottom: 3px solid #333;
  -webkit-box-shadow: 0 2px 0 0 #d6d6d6;
  box-shadow: 0 2px 0 0 #d6d6d6;
  min-width: 72px;
  text-align: center;
}

.main-article-holder .btn:hover {
  opacity: .8;
  border-bottom: 3px solid #06588c;
  -webkit-box-shadow: none;
  box-shadow: none;
}

.main-article-holder .btn:hover:after {
  background: #045279;
}

.main-article-holder .btn:after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 1px;
  background: #46a3c5;
}

.main-article-holder .comments-wrap {
  float: right;
  background: #90d4f5;
  padding: 4px 5px;
  margin-right: -21px;
  position: relative;
}

.main-article-holder .comments-wrap::after {
  content: '';
  position: absolute;
  width: 0;
  height: 0;
  border: 4px solid transparent;
  border-right-color: #076e9f;
  bottom: -4px;
  right: 2px;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

.main-article-holder .comments-wrap a,
.main-article-holder .comments-wrap .likes-wrap {
  padding: 0 5px;
}

.main-article-holder .comments-wrap a:hover i,
.main-article-holder .comments-wrap .likes-wrap:hover i {
  color: #076e9f;
}

.main-article-holder .comments-wrap i,
.main-article-holder .comments-wrap span {
  display: inline-block;
  vertical-align: middle;
}

.main-article-holder .comments-wrap .extra-text {
  display: inline-block;
  vertical-align: middle;
}

.main-article-holder .comments-wrap .likes-wrap {
  color: #076e9f;
}

.main-article-holder .comments-wrap i {
  color: #fff;
  margin-right: 5px;
  -webkit-transition: color .4s;
  -o-transition: color .4s;
  transition: color .4s;
}

.articles-holder {
  padding: 19px 0 30px 12px;
  font-size: 0;
  line-height: 0;
}

.articles-holder .article-wrap,
.articles-holder .add-article {
  position: relative;
  font-size: 14px;
  line-height: 1.6;
}

.articles-holder .article-wrap:before,
.articles-holder .article-wrap:after,
.articles-holder .add-article:before,
.articles-holder .add-article:after {
  content: "";
  position: absolute;
  z-index: -2;
  bottom: 15px;
  left: 13px;
  width: 50%;
  height: 20%;
  max-width: 300px;
  -webkit-box-shadow: 0 15px 10px rgba(0, 0, 0, 0.7);
  box-shadow: 0 15px 10px rgba(0, 0, 0, 0.7);
  -webkit-transform: rotate(-2deg);
  -ms-transform: rotate(-2deg);
  transform: rotate(-2deg);
}

.articles-holder .article-wrap:after,
.articles-holder .add-article:after {
  right: 13px;
  left: auto;
  -webkit-transform: rotate(2deg);
  -ms-transform: rotate(2deg);
  transform: rotate(2deg);
}

.articles-holder .columns-holder {
  margin: 0 -7px 30px;
}

.articles-holder .article-wrap {
  display: inline-block;
  vertical-align: top;
  width: 50%;
  padding: 0 7px;
}

.articles-holder .article {
  border-top-left-radius: 15px;
  background: #eaeaea;
  padding: 25px 20px 10px;
}

.articles-holder .article a:hover {
  opacity: .6;
}

.articles-holder .title {
  margin-bottom: 30px;
}

.articles-holder .title h3 {
  line-height: 1;
  margin-bottom: 0;
}

.articles-holder .title span {
  font-size: 12px;
}

.articles-holder .autor-name,
.articles-holder time {
  color: #076e9f;
}

.articles-holder .meta {
  text-align: right;
  background: #f4f3f3;
  padding: 10px;
  font-size: 12px;
}

.articles-holder .meta a {
  padding: 0 5px;
}

.articles-holder .meta a:hover {
  opacity: .6;
}

.articles-holder .meta i,
.articles-holder .meta span {
  display: inline-block;
  vertical-align: middle;
}

.articles-holder .meta i {
  color: #90d4f5;
}

.articles-holder .add-article {
  min-height: 100px;
  text-align: center;
  background: -webkit-gradient(linear, left top, left bottom, from(#e8e7e7), to(#f4f3f3));
  background: -webkit-linear-gradient(top, #e8e7e7 0%, #f4f3f3 100%);
  background: -o-linear-gradient(top, #e8e7e7 0%, #f4f3f3 100%);
  background: linear-gradient(to bottom, #e8e7e7 0%, #f4f3f3 100%);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#e8e7e7', endColorstr='#f4f3f3',GradientType=0 );
  padding: 10px;
  border-bottom: 1px solid #e1e1e1;
  -webkit-box-shadow: 0 0px 10px rgba(239, 239, 239, 0.7);
  box-shadow: 0 0px 10px rgba(239, 239, 239, 0.7);
  line-height: 100px;
}

.articles-holder .add-article a {
  display: inline-block;
  vertical-align: middle;
  color: #5c5c5c;
  line-height: 1.4;
}

.articles-holder .add-article a:hover {
  opacity: .7;
}

/**end main content**/

.map-section {
  padding: 15px 0 0;
}

.map-section img {
  width: 100%;
  vertical-align: top;
}

.sidebar {
  float: left;
  width: 195px;
  padding: 30px 0 0;
  font-size: 12px;
}

.sidebar-block {
  padding: 0 30px 15px 0;
  margin-bottom: 15px;
  border-bottom: 1px dotted #d5d5d5;
}

.sidebar-block:last-child {
  border-bottom: none;
}

.posts-list-holder li {
  margin-bottom: 10px;
  font-size: 0;
  line-height: 0;
}

.posts-list-holder .img-box,
.posts-list-holder .txt-box {
  display: inline-block;
  vertical-align: top;
}

.posts-list-holder .img-box {
  width: 28%;
  max-width: 85px;
}

.posts-list-holder .txt-box {
  width: 72%;
  font-size: 12px;
  line-height: 1.6;
  padding-left: 8px;
}

.posts-list-holder img {
  vertical-align: top;
  width: 100%;
}

.posts-list-holder a {
  color: #5c5c5c;
}

.posts-list-holder a:hover {
  opacity: .6;
}

.posts-list-holder .title {
  display: block;
  text-transform: uppercase;
  font-weight: bold;
}

.posts-list-holder .comments {
  font-style: italic;
}

.posts-list-holder i,
.posts-list-holder span {
  display: inline-block;
  vertical-align: middle;
}

.posts-list-holder i {
  color: #dddddd;
}

.chart-wrap tr:first-child td {
  background: #076e9f;
  color: #fff;
  text-align: center;
  width: 39px;
}

.chart-wrap td {
  background: #c7e9fa;
  color: #076e9f;
  text-align: center;
  width: 39px;
}

.chart-wrap img {
  vertical-align: middle;
}

#footer {
  padding: 20px 0 10px;
}

#footer .container:first-child {
  border-bottom: 1px dotted #d5d5d5;
}

.footer-holder {
  position: relative;
  padding-bottom: 10px;
  text-transform: uppercase;
}

.logo-holder-footer {
  float: left;
  max-width: 110px;
}

.logo-holder-footer a {
  display: inline-block;
  vertical-align: top;
}

.logo-holder-footer a:hover {
  opacity: .7;
}

.logo-holder-footer img {
  border: none;
  vertical-align: top;
}

.navbar-footer {
  float: right;
}

.nav-list-footer {
  font-size: 12px;
}

.nav-list-footer li {
  display: inline-block;
  vertical-align: middle;
  padding: 0 0 0 10px;
}

.nav-list-footer a {
  color: #707070;
}

.nav-list-footer a:hover {
  color: #076e9f;
}

.footer-frame {
  text-align: center;
  text-transform: uppercase;
  padding: 15px 0 0;
  color: #787878;
  font-size: 12px;
}

/* Slider */

.slick-slider {
  position: relative;
  display: block;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -ms-touch-action: pan-y;
  touch-action: pan-y;
  -webkit-tap-highlight-color: transparent;
}

.slick-list {
  position: relative;
  overflow: hidden;
  display: block;
  margin: 0;
  padding: 0;
}

.slick-list:focus {
  outline: none;
}

.slick-list.dragging {
  cursor: pointer;
  cursor: hand;
}

.slick-slider .slick-track,
.slick-slider .slick-list {
  -webkit-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
}

.slick-track {
  position: relative;
  left: 0;
  top: 0;
  display: block;
}

.slick-track:before,
.slick-track:after {
  content: "";
  display: table;
}

.slick-track:after {
  clear: both;
}

.slick-loading .slick-track {
  visibility: hidden;
}

.slick-slide {
  float: left;
  height: 100%;
  min-height: 1px;
  display: none;
}

[dir="rtl"] .slick-slide {
  float: right;
}

.slick-slide img {
  display: block;
}

.slick-slide.slick-loading img {
  display: none;
}

.slick-slide.dragging img {
  pointer-events: none;
}

.slick-initialized .slick-slide {
  display: block;
}

.slick-loading .slick-slide {
  visibility: hidden;
}

.slick-vertical .slick-slide {
  display: block;
  height: auto;
  border: 1px solid transparent;
}

.slick-arrow.slick-hidden {
  display: none;
}

/* Slider */

/* Icons */

@font-face {
  font-family: "slick";
  src: url("./fonts/slick.eot");
  src: url("./fonts/slick.eot?#iefix") format("embedded-opentype"), url("./fonts/slick.woff") format("woff"), url("./fonts/slick.ttf") format("truetype"), url("./fonts/slick.svg#slick") format("svg");
  font-weight: normal;
  font-style: normal;
}

/* Arrows */

.slick-prev,
.slick-next {
  position: absolute;
  display: block;
  height: 20px;
  width: 20px;
  line-height: 0px;
  font-size: 0px;
  cursor: pointer;
  background: transparent;
  color: transparent;
  top: 50%;
  margin-top: -10px\9;
  /*lte IE 8*/
  -webkit-transform: translate(0, -50%);
  -ms-transform: translate(0, -50%);
  transform: translate(0, -50%);
  padding: 0;
  border: none;
  outline: none;
}

.slick-prev:hover,
.slick-prev:focus,
.slick-next:hover,
.slick-next:focus {
  outline: none;
  background: transparent;
  color: transparent;
}

.slick-prev:hover:before,
.slick-prev:focus:before,
.slick-next:hover:before,
.slick-next:focus:before {
  opacity: 1;
}

.slick-prev.slick-disabled:before,
.slick-next.slick-disabled:before {
  opacity: 0.25;
}

.slick-prev:before,
.slick-next:before {
  font-family: "slick";
  font-size: 20px;
  line-height: 1;
  color: white;
  opacity: 0.75;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.slick-prev {
  left: -25px;
}

[dir="rtl"] .slick-prev {
  left: auto;
  right: -25px;
}

.slick-prev:before {
  content: "←";
}

[dir="rtl"] .slick-prev:before {
  content: "→";
}

.slick-next {
  right: -25px;
}

[dir="rtl"] .slick-next {
  left: -25px;
  right: auto;
}

.slick-next:before {
  content: "→";
}

[dir="rtl"] .slick-next:before {
  content: "←";
}

/* Dots */

.slick-slider {
  margin-bottom: 30px;
}

.slick-dots {
  position: absolute;
  bottom: -45px;
  list-style: none;
  display: block;
  text-align: center;
  padding: 0;
  width: 100%;
}

.slick-dots li {
  position: relative;
  display: inline-block;
  height: 20px;
  width: 20px;
  margin: 0 5px;
  padding: 0;
  cursor: pointer;
}

.slick-dots li button {
  border: 0;
  background: transparent;
  display: block;
  height: 20px;
  width: 20px;
  outline: none;
  line-height: 0px;
  font-size: 0px;
  color: transparent;
  padding: 5px;
  cursor: pointer;
}

.slick-dots li button:hover,
.slick-dots li button:focus {
  outline: none;
}

.slick-dots li button:hover:before,
.slick-dots li button:focus:before {
  opacity: 1;
}

.slick-dots li button:before {
  position: absolute;
  top: 0;
  left: 0;
  content: "•";
  width: 20px;
  height: 20px;
  font-family: "slick";
  font-size: 6px;
  line-height: 20px;
  text-align: center;
  color: black;
  opacity: 0.25;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.slick-dots li.slick-active button:before {
  color: black;
  opacity: 0.75;
}

@media (max-width: 1199px) {
  .carousel-holder .slick-prev {
    left: -8px;
  }

  .carousel-holder .slick-next {
    right: 8px;
  }
}

@media (max-width: 1023px) {
  .articles-holder .title {
    margin-bottom: 15px;
  }
}

@media (max-width: 768px) {
  h1,
  .h1 {
    font-size: 46px;
  }

  h2,
  .h2 {
    font-size: 26px;
  }

  h3,
  .h3 {
    font-size: 20px;
  }

  .visual-title p {
    font-size: 26px;
    padding: 5px;
  }

  .main-article-holder .txt-box {
    padding-left: 15px;
  }
}

@media (max-width: 767px) {
  body {
    line-height: 1.4;
    font-size: 12px;
  }

  #header .container:after {
    content: "";
    display: block;
    clear: both;
  }

  .logo-holder {
    padding: 0 20px 0 0;
    float: left;
    margin-bottom: 0;
  }

  .nav-active .links-holder {
    display: block;
    visibility: visible;
    opacity: 1;
    padding: 45px 0 0;
  }

  .nav-opener {
    display: inline-block;
    vertical-align: top;
  }

  .links-holder {
    display: none;
    visibility: hidden;
    opacity: 0;
    -webkit-transition: visibility .4s;
    -o-transition: visibility .4s;
    transition: visibility .4s;
  }

  .navbar {
    margin-bottom: 10px;
  }

  .navbar li {
    display: block;
    margin-bottom: 5px;
  }

  .social-list {
    position: static;
  }

  .social-list li {
    padding: 0 3px;
  }

  .carousel {
    margin: 0 -5px;
  }

  .carousel li {
    margin: 0 5px;
  }

  .main-content .container:before {
    display: none;
  }

  .main-content-holder {
    float: none;
    width: 100%;
    max-width: 100%;
    border-left: none;
  }

  .main-article-holder {
    border-width: 0 1px 1px 1px;
    padding: 15px 10px;
  }

  .main-article-holder .info-box,
  .main-article-holder .txt-box {
    font-size: 12px;
  }

  .main-article-holder .comments-wrap {
    margin-right: -17px;
  }

  .articles-holder {
    padding: 15px 0;
  }

  .articles-holder .article-wrap,
  .articles-holder .add-article {
    font-size: 12px;
  }

  .articles-holder .article {
    padding: 20px 20px 10px;
  }

  .sidebar {
    float: none;
    width: 100%;
    margin: 0 -5px;
    padding: 15px 0;
  }

  .sidebar-block {
    width: 33.33%;
    float: left;
    padding: 0 5px;
    margin-bottom: 0;
    border-bottom: none;
  }
}

@media (max-width: 479px) {
  .main-article-holder .info-box {
    width: 100%;
    margin-bottom: 7px;
  }

  .main-article-holder .txt-box {
    width: 100%;
    padding: 0;
  }

  .main-article-holder .comments-wrap .extra-text {
    display: none;
  }

  .articles-holder .columns-holder {
    margin: 0;
  }

  .articles-holder .article-wrap {
    width: 100%;
    margin-bottom: 15px;
    padding: 0;
  }

  .sidebar {
    margin: 0;
  }

  .sidebar-block {
    float: none;
    width: 100%;
    padding-bottom: 7px;
    margin-bottom: 7px;
  }

  #footer {
    padding: 15px 0;
    text-align: center;
  }

  .logo-holder-footer {
    float: none;
    margin: 0 auto 15px;
  }

  .navbar-footer {
    float: none;
  }

  .nav-list-footer li {
    padding: 0 5px;
  }

  .footer-frame {
    padding: 5px 0 0;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
